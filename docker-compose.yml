services:
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - db:${POSTGRES_DATA:-/var/lib/postgresql/data/pgdata}
    env_file:
      - .env
    environment:
      - PGDATA=${POSTGRES_DATA:-/var/lib/postgresql/data/pgdata}
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE:-/run/secrets/postgres_pwd}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-auth_db}
    secrets:
      - postgres_pwd
    networks:
      - net

  server:
    container_name: server
    build: ./server
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    command: >
      sh -c "
      cd app &&
      alembic revision --autogenerate &&
      alembic upgrade head &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - SECRET_KEY_FILE=/run/secrets/server_master_key
      - LOGIN_ATTEMPTS_LIMIT=${LOGIN_ATTEMPTS_LIMIT:-5}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-auth_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE:-/run/secrets/postgres_pwd}
    secrets:
      - server_master_key
      - postgres_pwd
    networks:
      - net
    ports:
      - "8000:8000"

volumes:
  db:

networks:
  net:

secrets:
  postgres_pwd:
    file: .secrets/postgres_pwd
  server_master_key:
    file: .secrets/server_master_key
